scale_x_continuous(breaks = seq(0, 1.2, 0.1), limits = c(0, 1.2))
ggplot(aes(x = DebtToIncomeRatio, y = LoanOriginalAmount), data = loan) +
geom_jitter(aes(color = LoanStatusLabel), alpha = 1/30) +
scale_x_continuous(breaks = seq(0, 1.2, 0.1), limits = c(0, 1.2))
ggplot(aes(x = DebtToIncomeRatio, y = LoanOriginalAmount), data = loan) +
geom_jitter(aes(color = LoanStatusLabel), alpha = 1/10) +
scale_x_continuous(breaks = seq(0, 1.2, 0.1), limits = c(0, 1.2))
ggplot(aes(x = DebtToIncomeRatio, y = LoanOriginalAmount), data = loan) +
geom_jitter(aes(color = LoanStatusLabel), alpha = 1/5) +
scale_x_continuous(breaks = seq(0, 1.2, 0.1), limits = c(0, 1.2))
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)), data = loan) +
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore)) +
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(DebtToIncomeRatio)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(DebtToIncomeRatio) & !is.na(ProsperScore)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(LoanOriginalAmount.bucket)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(LoanOriginalAmount.bucket) &
!is.na(ProsperScore)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
### Learned from Reviewer
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(LoanOriginalAmount.bucket) &
!is.na(ProsperScore)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket), alpah = 1/5) + ylim(0, 1)
### Learned from Reviewer
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(LoanOriginalAmount.bucket) &
!is.na(ProsperScore)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket), alpha = 1/5) + ylim(0, 1)
### Learned from Reviewer
loan$LoanOriginalAmount.bucket = cut(loan$LoanOriginalAmount,
c(0, 10000, 20000, 30000))
ggplot(aes(y = (DebtToIncomeRatio), x = factor(ProsperScore)),
data = subset(loan, !is.na(LoanOriginalAmount.bucket) &
!is.na(ProsperScore)))+
geom_boxplot(aes(fill =  LoanOriginalAmount.bucket)) + ylim(0, 1)
qplot(data = loan,
x = LoanStatusLabel, y = BorrowerAPR,
xlab = 'Loan Status',
ylab = 'Borrower APR',
main = 'Borrower APR Box Plot for Different Loan Statuses',
geom = 'boxplot', fill = I("#00b359"))
qplot(data = loan,
x = BorrowerAPR, y = ..count../sum(..count..), xlim = c(0.4, 0.6),
xlab = 'Borrower APR',
ylab = 'Proportion of Memberswith that APR',
main = 'APR more than 0.40 with related Proportion of Borrowers',
geom = 'freqpoly', color = LoanStatusLabel)
qplot(data = subset(loan, !is.na(BorrowerAPR)), x = BorrowerAPR,
color = I('black'), fill = I('green'),
xlab = 'BorrowerAPR',
ylab = 'Number of Borrowers',
main = 'Distribution of Borrower APRs for Different Loan Statuses') +
facet_wrap(~ LoanStatusLabel, ncol = 1)
loan_low_APR_2 <- subset(loan, BorrowerAPR < 0.2)
table(loan_low_APR_2$LoanStatusLabel)
qplot(data = loan,
x = LoanStatusLabel, y = BorrowerAPR,
xlab = 'Loan Status',
ylab = 'Borrower APR',
main = 'Borrower APR Box Plot for Different Loan Statuses',
geom = 'boxplot', fill = I("#00b359"))
#qplot(data = loan,
#      x = BorrowerAPR, y = ..count../sum(..count..), xlim = c(0.4, 0.6),
#      xlab = 'Borrower APR',
#      ylab = 'Proportion of Memberswith that APR',
#      main = 'APR more than 0.40 with related Proportion of Borrowers',
#      geom = 'freqpoly', color = LoanStatusLabel)
#qplot(data = subset(loan, !is.na(BorrowerAPR)), x = BorrowerAPR,
#      color = I('black'), fill = I('green'),
#      xlab = 'BorrowerAPR',
#      ylab = 'Number of Borrowers',
#      main = 'Distribution of Borrower APRs for Different Loan Statuses') +
#  facet_wrap(~ LoanStatusLabel, ncol = 1)
loan_low_APR_2 <- subset(loan, BorrowerAPR < 0.2)
table(loan_low_APR_2$LoanStatusLabel)
ggplot(aes(x = BorrowerAPR, y= ProsperScore), data = loan) +
geom_jitter(aes(color = LoanStatusLabel, shape = EmploymentStatus)) +
facet_wrap( ~ Term) +
xlab('Borrower APR') +
ylab('Prosper Score') +
ggtitle('Borrower APR Vs. Prosper Score for Different Terms and
Different Employment Status with Loan Status')
loan_low_APR <- subset(loan, BorrowerAPR < 0.2 & Term == 12 &
(EmploymentStatus == "Employed" |
EmploymentStatus == "Full-time"))
table(loan_low_APR$LoanStatusLabel)
ggplot(aes(x = BorrowerAPR, y= ProsperScore), data = loan) +
geom_boxplot()
ggplot(aes(y = BorrowerAPR, x= ProsperScore), data = loan) +
geom_boxplot()
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)), data = loan) +
geom_boxplot()
### Learned from Reviewer: Put a regression line for showing the trend.
ggplot(aes(x = BorrowerAPR, y = CreditScore), data = loan) +
geom_point(alpha = 1/35, color = "#8080ff") +
geom_smooth(method = 'lm', color = 'red')
### Learened from Reviewer: When on variable is factor scatterplot is not
### appropriate; use boxplot
ggplot(aes(y = BorrowerAPR, x =factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
geom_boxplot(alpha = 1/20, fill = I('#0073e6'))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
geom_boxplot(alpha = 1/20, fill = I('#0073e6'))
### Learened from Reviewer: When on variable is factor scatterplot is not
### appropriate; use boxplot
ggplot(aes(y = BorrowerAPR, x =factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
geom_boxplot(alpha = 1/20)
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(alpha = 1/20, fill = I('#0073e6'))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(alpha = 1/20, fill = Term)
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(alpha = 1/20, aes(fill = Term))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = Term), alpha = 1/20)
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = Term))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = factor(Term)))
# Term has only 3 different numbers and it's better to look at it as factors
# rather than integers
loan$Term <- as.factor(loan$Term)
qplot(x = Term, data = loan, color = I('black'), fill = I('yellow'))
summary(loan$Term)
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = Term))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = LoanStatusLabel))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = Term, shape = LoanStatusLabel))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = Term, fill = LoanStatusLabel))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = Term, color = LoanStatusLabel))
ggplot(aes(y = BorrowerAPR, x= factor(ProsperScore)),
data = subset(loan, !is.na(ProsperScore))) +
xlab('Prosper Score') +
ylab('Borrower APR') +
ggtitle('Borrower APR Vs. Prosper Score') +
geom_boxplot(aes(fill = Term))
qplot(data = loan,
x = LoanStatusLabel, y = BorrowerAPR,
xlab = 'Loan Status',
ylab = 'Borrower APR',
main = 'Borrower APR Box Plot for Different Loan Statuses',
geom = 'boxplot', fill = I("#00b359"))
qplot(data = subset(loan, !is.na(BankcardUtilization)), x = BankcardUtilization,
binwidth = 0.05,
xlab = 'Bank Card Utilization',
ylab = 'Number of Members',
main = 'Bank Card Utilization Distribution',
color = I('black'), fill = I('yellow')) +
scale_x_continuous(limits = c(-0.1, 1.5), breaks = seq(-0.1, 1.5, 0.1))
loan_for_cor <- subset(loan, select = c(BorrowerAPR, ProsperScore, CreditScore,
CreditAge, OpenCreditLines,
CurrentDelinquencies,
BankcardUtilization, DebtToIncomeRatio,
ProsperPrincipalBorrowed,
LoanOriginalAmount))
#cor(loan_for_cor, method = "pearson", use = "complete.obs")
ggcorr(loan_for_cor, label = TRUE, label_size = 3, label_round = 2,
label_alpha = TRUE)
ggcorr(loan_for_cor, nbreaks = 5)
ggcorr(loan_for_cor, nbreaks = 5) +
theme(legend.title = element_text(size = 12))
ggcorr(loan_for_cor, nbreaks = 5) +
theme(legend.title = element_text(size = 8))
ggcorr(loan_for_cor, nbreaks = 5) +
theme(legend.title = element_text(size = 5))
ggcorr(loan_for_cor, nbreaks = 5) +
theme(text = element_text(size = 8))
ggcorr(loan_for_cor, nbreaks = 5) +
theme(text = element_text(size = 5))
ggcorr(loan_for_cor, nbreaks = 5, legend.size = 4)
ggcorr(loan_for_cor, nbreaks = 5, label_size = 4)
ggcorr(loan_for_cor, nbreaks = 5, size = 4)
ggcorr(loan_for_cor, nbreaks = 5, size = 2)
ggcorr(loan_for_cor, nbreaks = 5, size = 3)
summary(loan$BankcardUtilization)
summary(loan$BorrowerAPR)
summary(loan$EmploymentStatus)
ggcorr(loan_for_cor, nbreaks = 5, size = 3) +
opts(plot.margin = unit(c(5, 5, 5, 5), "cm"))
ggcorr(loan_for_cor, nbreaks = 5, size = 3) +
opts(plot.margin = unit(c(5, 5, 5, 5), "cm"))
ggcorr(loan_for_cor, nbreaks = 5)
ggcorr(loan_for_cor, nbreaks = 5, width = 20)
# Chunk 1
library(ggplot2)
library(grid)
library(gridExtra)
library(lubridate)
library(GGally)
library(dplyr)
library(psych)
# Chunk 2
# Load the Data
setwd("C:/Users/Shahrooz/Desktop/P4-R")
# putting null values as "NA"s in the data set.
loan_Orig <- read.csv("prosperLoanData.csv", na.strings = c("", "NA"))
# creating a new variable for CreditScore base on UpperRange and LowerRange
# of CreditScore
loan_Orig$CreditScore <- (loan_Orig$CreditScoreRangeLower +
loan_Orig$CreditScoreRangeUpper)/2 + 0.5
# calculating CreditAge
# converting dates to POSIX format for doing calculation with it
loan_Orig$DateCreditPulled <- as.POSIXlt(loan_Orig$DateCreditPulled)
loan_Orig$FirstRecordedCreditLine <-
as.POSIXlt(loan_Orig$FirstRecordedCreditLine)
# adding CredutAge as a new variable to dataframe
loan_Orig$CreditAge <- year(loan_Orig$DateCreditPulled) -
year(loan_Orig$FirstRecordedCreditLine)
# Chunk 3
### creating a new variable base on LoanStatus
### Don't forget that if statement is not a vectorized function and that's
### the reason I wrote it in this way; Something like nested if statements.
loan_Orig$LoanStatusLabel <- with(loan_Orig,
ifelse(LoanStatus == "Chargedoff", "Failed",
ifelse(LoanStatus == "Defaulted", "Failed",
ifelse(LoanStatus == "Completed", "Completed", NA))))
### converting LoanStatusLabel as factor
loan_Orig$LoanStatusLabel <- as.factor(loan_Orig$LoanStatusLabel)
# Chunk 4
# Dimention of the original dataset
# dim(loan)
# The choosen features out of 81 variables and the subset data structure we have
my_variables <- c("CreditGrade", "Term", "BorrowerAPR", "ProsperScore",
"BorrowerState","EmploymentStatus", "IsBorrowerHomeowner",
"CreditScore", "CreditAge", "OpenCreditLines",
"CurrentDelinquencies", "BankcardUtilization",
"DebtToIncomeRatio", "ProsperPrincipalBorrowed",
"LoanOriginalAmount", "LoanStatusLabel")
loan <- loan_Orig[my_variables]
# Omitting rows with NA for LoanStatusLabel; Focusing on Completed of Failed
# Loans only
loan <- subset(loan, !is.na(LoanStatusLabel))
## another way for subsetting
## loan <- subset(loan_Orig, select = c("OpenCreditLines"))
## removing loan_Orig dataframe
rm(loan_Orig)
rm(my_variables)
qplot(data = subset(loan, !is.na(OpenCreditLines)), x = OpenCreditLines,
binwidth = 1,
color = I('black'), fill = I('red')) +
scale_x_continuous(breaks = seq(0, 40, 1)) +
theme(text = element_text(size=8),
axis.text.x = element_text(angle = 90))
qplot(data = subset(loan, !is.na(OpenCreditLines)), x = OpenCreditLines,
binwidth = 1,
color = I('black'), fill = I('red')) +
scale_x_continuous(breaks = seq(0, 40, 1)) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle = 90))
qplot(data = subset(loan, !is.na(DebtToIncomeRatio)),
x = DebtToIncomeRatio,
color = I('black'), fill = I('green')) +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, 0.25))
nrow(subset(loan, DebtToIncomeRatio > 5))
qplot(data = subset(loan, !is.na(DebtToIncomeRatio)),
x = DebtToIncomeRatio,
binwidth = 0.1,
color = I('black'), fill = I('green')) +
scale_x_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 0.1))
summary(loan$DebtToIncomeRatio)
qplot(data = subset(loan, !is.na(DebtToIncomeRatio)),
x = DebtToIncomeRatio,
color = I('black'), fill = I('green')) +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, 0.25)) +
theme(text = element_text(size=8),
axis.text.x = element_text(angle = 90))
nrow(subset(loan, DebtToIncomeRatio > 5))
qplot(data = subset(loan, !is.na(ProsperPrincipalBorrowed)),
x = ProsperPrincipalBorrowed,
color = I('black'), fill = I('blue')) +
scale_x_continuous(limits = c(0, 45000), breaks = seq(0, 45000, 2000))
qplot(data = subset(loan, !is.na(ProsperPrincipalBorrowed)),
x = ProsperPrincipalBorrowed,
color = I('black'), fill = I('blue')) +
scale_x_continuous(limits = c(0, 45000), breaks = seq(0, 45000, 2000)) +
theme(text = element_text(size=8),
axis.text.x = element_text(angle = 90))
loan_for_cor <- subset(loan, select = c(BorrowerAPR, ProsperScore, CreditScore,
CreditAge, OpenCreditLines,
CurrentDelinquencies,
BankcardUtilization, DebtToIncomeRatio,
ProsperPrincipalBorrowed,
LoanOriginalAmount))
#cor(loan_for_cor, method = "pearson", use = "complete.obs")
ggcorr(loan_for_cor, nbreaks = 5)
loan_for_cor <- subset(loan, select = c(BorrowerAPR, ProsperScore, CreditScore,
CreditAge, OpenCreditLines,
CurrentDelinquencies,
BankcardUtilization, DebtToIncomeRatio,
ProsperPrincipalBorrowed,
LoanOriginalAmount))
#cor(loan_for_cor, method = "pearson", use = "complete.obs")
ggcorr(loan_for_cor, nbreaks = 5, label = TRUE)
### HeatMap
ggplot(aes(y = CreditScore, x = ProsperScore, fill = CreditAge),
data = loan) +
ylim(400, 890) +
geom_tile() +
scale_fill_gradientn(colors = colorRampPalette(c('blue', 'red'))(100))
### HeatMap
ggplot(aes(y = CreditScore, x = ProsperScore, fill = CreditAge),
data = loan) +
ylim(600, 890) +
geom_tile() +
scale_fill_gradientn(colors = colorRampPalette(c('blue', 'red'))(100))
### Learned from Reviewer
ggplot(aes(x = CreditAge, y = CreditScore), data = loan) +
geom_point(alpha = 1/40, color = I('#0033cc')) +
geom_smooth(method = 'lm', color = 'red') +
ylim(300, 850)
### Learned from Reviewer
ggplot(aes(x = CreditAge, y = CreditScore), data = loan) +
geom_jitter(alpha = 1/40, color = I('#0033cc')) +
geom_smooth(method = 'lm', color = 'red') +
ylim(300, 850)
### Learned from Reviewer
ggplot(aes(x = CreditAge, y = CreditScore), data = loan) +
geom_jitter(alpha = 1/40, color = I('#0033cc')) +
geom_smooth(method = 'lm', color = 'red') +
ylim(460, 850)
ggplot(aes(x = BorrowerAPR), data = loan) +
geom_histogram(aes(fill = LoanStatusLabel)) +
facet_wrap(~ CreditScore)
### Learned from Reviewer
ggplot(aes(x = factor(CreditScore), y = BorrowerAPR),
data = subset(loan, !is.na(CreditScore) & CreditScore > 400)) +
geom_boxplot(alpha = 1/20, fill = I('yellow'))
### Learned from Reviewer
ggplot(aes(x = factor(CreditScore), y = BorrowerAPR, fill = LoanStatusLabel),
data = subset(loan, !is.na(CreditScore) & CreditScore > 400)) +
geom_boxplot(alpha = 1/20)
### Learned from Reviewer
ggplot(aes(x = factor(CreditScore), y = BorrowerAPR, fill = LoanStatusLabel),
data = subset(loan, !is.na(CreditScore) & CreditScore > 400)) +
geom_boxplot()
ggplot(aes(x = BorrowerAPR, y= ProsperScore), data = loan) +
geom_jitter(aes(color = LoanStatusLabel, shape = EmploymentStatus)) +
facet_wrap( ~ Term)
loan_low_APR <- subset(loan, BorrowerAPR < 0.2 & Term == 12 &
(EmploymentStatus == "Employed" |
EmploymentStatus == "Full-time"))
table(loan_low_APR$LoanStatusLabel)
ggplot(aes(x = factor(ProsperScore), y = BorrowerAPR), fill = LoanStatusLabel),
data = subset(loan, !is.na(ProsperScore)) +
geom_boxplot() +
facet_wrap( ~ Term)
ggplot(aes(x = factor(ProsperScore), y = BorrowerAPR), fill = LoanStatusLabel),
data = subset(loan, !is.na(ProsperScore)) +
geom_boxplot() +
facet_wrap( ~ Term)
ggplot(aes(x = factor(ProsperScore), y = BorrowerAPR), fill = LoanStatusLabel),
data = subset(loan, !is.na(ProsperScore))) +
geom_boxplot() +
facet_wrap( ~ Term)
ggplot(aes(x = factor(ProsperScore), y = BorrowerAPR), fill = LoanStatusLabel,
data = subset(loan, !is.na(ProsperScore))) +
geom_boxplot() +
facet_wrap( ~ Term)
ggplot(aes(x = factor(ProsperScore), y = BorrowerAPR, fill = LoanStatusLabel),
data = subset(loan, !is.na(ProsperScore))) +
geom_boxplot() +
facet_wrap( ~ Term)
qplot(data = loan,
x = LoanStatusLabel, y = BorrowerAPR,
xlab = 'Loan Status',
ylab = 'Borrower APR[%]',
main = 'Borrower APR Vs. Different Loan Statuses',
geom = 'boxplot', fill = I("#00b359"))
p1 <- qplot(data = loan,
x = LoanStatusLabel, y = BorrowerAPR,
xlab = 'Loan Status',
ylab = 'Borrower APR[%]',
main = 'Borrower APR Vs. Different Loan Statuses',
geom = 'boxplot', fill = I("#00b359"))
p1 <- qplot(data = loan,
x = LoanStatusLabel, y = BorrowerAPR,
xlab = 'Loan Status',
ylab = 'Borrower APR[%]',
main = 'Borrower APR Vs. Different Loan Statuses',
geom = 'boxplot', fill = I("#00b359"))
p2 <- qplot(data = loan,
x = BorrowerAPR, y = ..count../sum(..count..), xlim = c(0.4, 0.6),
xlab = 'Borrower APR',
ylab = 'Proportion of Memberswith that APR',
main = 'APR more than 0.40 with related Proportion of Borrowers',
geom = 'boxplot', color = LoanStatusLabel)
p3 <- qplot(data = subset(loan, !is.na(BorrowerAPR)), x = BorrowerAPR,
color = I('black'), fill = I('green'),
xlab = 'BorrowerAPR',
ylab = 'Number of Borrowers',
main = 'Distribution of Borrower APRs for Different Loan Statuses',
geom = 'boxplot')
grid.arrange( p1, p2, p3, nrow =1)
qplot(data = loan,
x = BorrowerAPR, y = ..count../sum(..count..), xlim = c(0.4, 0.6),
xlab = 'Borrower APR',
ylab = 'Proportion of Memberswith that APR',
main = 'APR more than 0.40 with related Proportion of Borrowers',
geom = 'boxplot', color = LoanStatusLabel)
qplot(data = subset(loan, !is.na(BorrowerAPR)), x = BorrowerAPR,
color = I('black'), fill = I('green'),
xlab = 'BorrowerAPR',
ylab = 'Number of Borrowers',
main = 'Distribution of Borrower APRs for Different Loan Statuses',
geom = 'boxplot')
qplot(data = loan,
x = LoanStatusLabel, y = BorrowerAPR,
xlab = 'Loan Status',
ylab = 'Borrower APR[%]',
main = 'Borrower APR Vs. Different Loan Statuses',
geom = 'boxplot', fill = I("#00b359"))
qplot(data = subset(loan, !is.na(CurrentDelinquencies)),
x = CurrentDelinquencies,
color = I('black'), fill = I('purple')) +
scale_x_continuous(breaks = seq(0, 20, 2))
summary(loan$CurrentDelinquencies)
qplot(data = subset(loan, !is.na(CurrentDelinquencies)),
x = CurrentDelinquencies,
color = I('black'), fill = I('purple')) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 2))
summary(loan$CurrentDelinquencies)
qplot(data = subset(loan, !is.na(CurrentDelinquencies)),
x = CurrentDelinquencies,
color = I('black'), fill = I('purple')) +
scale_x_continuous(limits = c(-0.1, 20), breaks = seq(0, 20, 2))
summary(loan$CurrentDelinquencies)
qplot(data = subset(loan, !is.na(CurrentDelinquencies)),
x = CurrentDelinquencies,
color = I('black'), fill = I('purple')) +
scale_x_continuous(limits = c(-0.5, 20), breaks = seq(-0.5, 20, 2))
summary(loan$CurrentDelinquencies)
